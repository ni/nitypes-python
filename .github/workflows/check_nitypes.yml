name: Check nitypes

on:
  workflow_call:
  workflow_dispatch:

jobs:
  check_nitypes:
    name: Check nitypes
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Set up Python
        uses: ni/python-actions/setup-python@f42e2f27a585f5d47efcab79b608ec0ec97191c9 # v0.6.1
        id: setup-python
      - name: Set up Poetry
        uses: ni/python-actions/setup-poetry@f42e2f27a585f5d47efcab79b608ec0ec97191c9 # v0.6.1
      - name: Check for lock changes
        run: poetry check --lock
      - name: Cache virtualenv
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: .venv
          key: nitypes-${{ runner.os }}-py${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install nitypes
        run: poetry install -v
      - name: Lint
        run: poetry run ni-python-styleguide lint
      - name: Mypy static analysis (Linux)
        run:  poetry run mypy
      - name: Mypy static analysis (Windows)
        run:  poetry run mypy --platform win32
      - name: Bandit security checks
        run:  poetry run bandit -c pyproject.toml -r src/nitypes
      - name: Add virtualenv to the path for pyright-action
        run: echo "$(poetry env info --path)/bin" >> $GITHUB_PATH
      - name: Pyright static analysis (Linux)
        uses: jakebailey/pyright-action@6cabc0f01c4994be48fd45cd9dbacdd6e1ee6e5e # v2.3.3
        with:
          python-platform: Linux
          version: PATH
      - name: Pyright static analysis (Windows)
        uses: jakebailey/pyright-action@6cabc0f01c4994be48fd45cd9dbacdd6e1ee6e5e # v2.3.3
        with:
          python-platform: Windows
          version: PATH
