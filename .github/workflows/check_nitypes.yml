name: Check nitypes

on:
  workflow_call:
  workflow_dispatch:

env:
  PIPX_BIN_DIR: ~/.local/bin
  PIPX_HOME: ~/.local/pipx
  POETRY_VERSION: 1.8.2
  PYTHON_VERSION: 3.11.9

jobs:
  check_nitypes:
    name: Check nitypes
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Cache pipx
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.PIPX_HOME }}
            ${{ env.PIPX_BIN_DIR }}
          key: pipx-${{ runner.os }}-py${{ steps.setup-python.outputs.python-version }}-poetry${{ env.POETRY_VERSION }}
      - name: Add PIPX_BIN_DIR to the path
        run: echo "${{ env.PIPX_BIN_DIR }}" >> "$GITHUB_PATH"
      - name: Set up Poetry
        run: pipx install poetry==${{ env.POETRY_VERSION }} --python '${{ steps.setup-python.outputs.python-path }}'
      - name: Check for lock changes
        run: poetry check --lock
      - name: Cache virtualenv
        uses: actions/cache@v4
        with:
          path: .venv
          key: nitypes-${{ runner.os }}-py${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install nitypes
        run: poetry install -v
      - name: Lint
        run: poetry run ni-python-styleguide lint
      - name: Mypy static analysis (Linux)
        run:  poetry run mypy
      - name: Mypy static analysis (Windows)
        run:  poetry run mypy --platform win32
      - name: Bandit security checks
        run:  poetry run bandit -c pyproject.toml -r src/nitypes
