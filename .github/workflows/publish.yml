name: Publish nitypes

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        default: 'testpypi'

env:
  dist-artifact-name: nitypes-distribution-packages

jobs:
  check_nitypes:
    name: Check nitypes
    uses: ./.github/workflows/check_nitypes.yml
  check_docs:
    name: Check docs
    uses: ./.github/workflows/check_docs.yml
  build_nitypes:
    name: Build nitypes
    runs-on: ubuntu-latest
    needs: [check_nitypes, check_docs]
    steps:
      - name: Check out repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Python
        uses: ni/python-actions/setup-python@e8f25e9a64426bd431ac124b83df11b76cdf60d5 # v0.1.0
      - name: Set up Poetry
        uses: ni/python-actions/setup-poetry@e8f25e9a64426bd431ac124b83df11b76cdf60d5 # v0.1.0
      - name: Build distribution packages
        run: poetry build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.dist-artifact-name }}
          path: dist/*
  publish_to_testpypi:
    name: Publish nitypes to TestPyPI
    if: github.event_name == 'workflow_dispatch' && inputs.environment == 'testpypi'
    runs-on: ubuntu-latest
    needs: [build_nitypes]
    environment:
      name: testpypi
      url: https://test.pypi.org/p/nitypes
    permissions:
      id-token: write
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.dist-artifact-name }}
        path: dist/
    - run: ls -lR
    - name: Upload to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
  publish_to_pypi:
    name: Publish nitypes to PyPI
    if: github.event_name == 'release' || inputs.environment == 'pypi'
    runs-on: ubuntu-latest
    needs: [build_nitypes]
    environment:
      name: pypi
      url: https://pypi.org/p/nitypes
    permissions:
      id-token: write
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.dist-artifact-name }}
        path: dist/
    - run: ls -lR
    - name: Upload to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
  update_version:
    name: Update nitypes version
    runs-on: ubuntu-latest
    needs: [build_nitypes]
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Check out repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Python
        uses: ni/python-actions/setup-python@e8f25e9a64426bd431ac124b83df11b76cdf60d5 # v0.1.0
      - name: Set up Poetry
        uses: ni/python-actions/setup-poetry@e8f25e9a64426bd431ac124b83df11b76cdf60d5 # v0.1.0
      - name: Get version from pyproject.toml
        id: get-version
        run: echo version=`poetry version --short` >> "$GITHUB_OUTPUT"
      - name: Bump the version number
        id: bump-version
        run: |
          # Workaround for https://github.com/python-poetry/poetry/issues/8718 - "Add 'dev' as
          # version bump rule for developmental releases."
          import os, re
          version = "${{ steps.get-version.outputs.version }}"
          match = re.match(r"^(.*-dev)(\d+)$", version)
          if match:
              version = f"{match.group(1)}{int(match.group(2))+1}"
          with open(os.environ["GITHUB_OUTPUT"], "a") as f:
              print(f"version={version}", file=f)
        shell: python
      - name: Update version in pyproject.toml
        if: steps.get-version.outputs.version != steps.bump-version.outputs.version
        run: poetry version ${{ steps.bump-version.outputs.version }}
      - name: Create pull request
        if: steps.get-version.outputs.version != steps.bump-version.outputs.version
        uses: peter-evans/create-pull-request@v7
        with:
          branch: users/build/update-version-to-${{ steps.bump-version.outputs.version }}
          title: "chore: Update version to ${{ steps.bump-version.outputs.version }}"
          body: |
            ### What does this Pull Request accomplish?

            Update the package version to ${{ steps.bump-version.outputs.version }}

            ### Why should this Pull Request be merged?

            Prepare for the next release.

            ### What testing has been done?

            N/A
        